
% fit all matfiles to the potantail (logRDF) for different steps, using multifit (shared parameters)

steps = {'10';'50'; '100'; '1k'; '2k'; '6k'; '12k'};


load('logRDFdata.mat');
tind = 0;
rind = 0;

for t = [0.45,0.6,0.8,1,1.5,2]
    tind = tind + 1;
    rind = 0;
    for r = [0.005,0.01,0.05,0.1]
            rind = rind + 1;
            disp(t); 
            disp(r);
            disp('------');
	    tic            
            ys10 = {logRDF10{tind,rind,1},...
                  logRDF10{tind,rind,2},...
                  logRDF10{tind,rind,3},...
                  logRDF10{tind,rind,4}};
            ys50 = {logRDF50{tind,rind,1},...
                  logRDF50{tind,rind,2},...
                  logRDF50{tind,rind,3},...
                  logRDF50{tind,rind,4}};
            ys100 = {logRDF100{tind,rind,1},...
                  logRDF100{tind,rind,2},...
                  logRDF100{tind,rind,3},...
                  logRDF100{tind,rind,4}};
            ys1k = {logRDF1k{tind,rind,1},...
                  logRDF1k{tind,rind,2},...
                  logRDF1k{tind,rind,3},...
                  logRDF1k{tind,rind,4}};
            ys2k = {logRDF2k{tind,rind,1},...
                  logRDF2k{tind,rind,2},...
                  logRDF2k{tind,rind,3},...
                  logRDF2k{tind,rind,4}};
            ys6k  = {logRDF6k{tind,rind,1},...
                  logRDF6k{tind,rind,2},...
                  logRDF6k{tind,rind,3},...
                  logRDF6k{tind,rind,4}};
            ys12k = {logRDF12k{tind,rind,1},...
                  logRDF12k{tind,rind,2},...
                  logRDF12k{tind,rind,3},...
                  logRDF12k{tind,rind,4}};
            xs10 = {xlogRDF10{tind,rind,1},...
                  xlogRDF10{tind,rind,2},...
                  xlogRDF10{tind,rind,3},...
                  xlogRDF10{tind,rind,4}};
            xs50 = {xlogRDF50{tind,rind,1},...
                  xlogRDF50{tind,rind,2},...
                  xlogRDF50{tind,rind,3},...
                  xlogRDF50{tind,rind,4}};
            xs100 = {xlogRDF100{tind,rind,1},...
                  xlogRDF100{tind,rind,2},...
                  xlogRDF100{tind,rind,3},...
                  xlogRDF100{tind,rind,4}};
            xs1k = {xlogRDF1k{tind,rind,1},...
                  xlogRDF1k{tind,rind,2},...
                  xlogRDF1k{tind,rind,3},...
                  xlogRDF1k{tind,rind,4}};
            xs2k = {xlogRDF2k{tind,rind,1},...
                  xlogRDF2k{tind,rind,2},...
                  xlogRDF2k{tind,rind,3},...
                  xlogRDF2k{tind,rind,4}};
            xs6k  = {xlogRDF6k{tind,rind,1},...
                  xlogRDF6k{tind,rind,2},...
                  xlogRDF6k{tind,rind,3},...
                  xlogRDF6k{tind,rind,4}};
            xs12k = {xlogRDF12k{tind,rind,1},...
                  xlogRDF12k{tind,rind,2},...
                  xlogRDF12k{tind,rind,3},...
                  xlogRDF12k{tind,rind,4}};

            % multifit            
	    f1 = @(beta,x) (4/beta(1))*(x.^(-beta(2))-x.^(-beta(3)));	    
	    f2 = @(beta,x) (4/beta(1))*(x.^(-beta(2))-x.^(-beta(4)));	    
	    f3 = @(beta,x) (4/beta(1))*(x.^(-beta(2))-x.^(-beta(5)));	    
	    f4 = @(beta,x) (4/beta(1))*(x.^(-beta(2))-x.^(-beta(6)));	    

            f = {f1,f2,f3,f4};
            beta0 = [1,1,1,1,1,1];
try

            [beta10{tind,rind},r10{tind,rind},J10{tind,rind},Sigma10{tind,rind},mse10{tind,rind},errorparam10{tind,rind},robustw10{tind,rind}] = nlinmultifit(xs10, ys10, f, beta0);
catch ME
            beta10{tind,rind}= [];r10{tind,rind}= [];J10{tind,rind}= [];Sigma10{tind,rind}= [];mse10{tind,rind}= [];errorparam10{tind,rind} = [];robustw10{tind,rind} = [];
	    disp(['10 ' ME.message]);
end
try
            [beta50{tind,rind},r50{tind,rind},J50{tind,rind},Sigma50{tind},mse50{tind,rind},errorparam50{tind,rind},robustw50{tind,rind}] = nlinmultifit(xs50, ys50, f, beta0);
catch ME
            beta50{tind,rind}= [];r50{tind,rind}= [];J50{tind,rind}= [];Sigma50{tind,rind}= [];mse50{tind,rind}= [];errorparam50{tind,rind} = [];robustw50{tind,rind} = [];
	    disp(['10 ' ME.message]);
	    disp('nan!50');
end
try
            [beta100{tind,rind},r100{tind,rind},J100{tind,rind},Sigma100{tind},mse100{tind,rind},errorparam100{tind,rind},robustw100{tind,rind}] = nlinmultifit(xs100, ys100, f, beta0);
catch ME
            beta100{tind,rind}= [];r100{tind,rind}= [];J100{tind,rind}= [];Sigma100{tind,rind}= [];mse100{tind,rind}= [];errorparam100{tind,rind} = [];robustw100{tind,rind} = [];
	    disp(['10 ' ME.message]);
	    disp('nan!100');
end
try
            [beta1k{tind,rind},r1k{tind,rind},J1k{tind,rind},Sigma1k{tind},mse1k{tind,rind},errorparam1k{tind,rind},robustw1k{tind,rind}] = nlinmultifit(xs1k, ys1k, f, beta0);
catch ME
            beta1k{tind,rind}= [];r1k{tind,rind}= [];J1k{tind,rind}= [];Sigma1k{tind,rind}= [];mse1k{tind,rind}= [];errorparam1k{tind,rind} = [];robustw1k{tind,rind} = [];
	    disp(['10 ' ME.message]);
	    disp('nan!1k');
end
try
            [beta2k{tind,rind},r2k{tind,rind},J2k{tind,rind},Sigma2k{tind},mse2k{tind,rind},errorparam2k{tind,rind},robustw2k{tind,rind}] = nlinmultifit(xs2k, ys2k, f, beta0);
catch ME
            beta2k{tind,rind}= [];r2k{tind,rind}= [];J2k{tind,rind}= [];Sigma2k{tind,rind}= [];mse2k{tind,rind}= [];errorparam2k{tind,rind} = [];robustw2k{tind,rind} = [];
	    disp(['10 ' ME.message]);
	    disp('nan!2k');
end
try
            [beta6k{tind,rind},r6k{tind,rind},J6k{tind,rind},Sigma6k{tind},mse6k{tind,rind},errorparam6k{tind,rind},robustw6k{tind,rind}] = nlinmultifit(xs6k, ys6k, f, beta0);
catch ME
            beta6k{tind,rind}= [];r6k{tind,rind}= [];J6k{tind,rind}= [];Sigma6k{tind,rind}= [];mse6k{tind,rind}= [];errorparam6k{tind,rind} = [];robustw6k{tind,rind} = [];
	    disp(['10 ' ME.message]);
	    disp('nan!6k');
end
try
            [beta12k{tind,rind},r12k{tind,rind},J12k{tind,rind},Sigma12k{tind,rind},mse12k{tind,rind},errorparam12k{tind,rind},robustw12k{tind,rind}] = nlinmultifit(xs12k, ys12k, f, beta0);
catch ME
            beta12k{tind,rind}= [];r12k{tind,rind}= [];J12k{tind,rind}= [];Sigma12k{tind,rind}= [];mse12k{tind,rind}= [];errorparam12k{tind,rind} = [];robustw12k{tind,rind} = [];
	    disp(['10 ' ME.message]);
	    disp('nan!12k');
end

        toc
     
    end
end

save('all_multifitted.mat',...
            'beta10','r10','J10','Sigma10','mse10','errorparam10','robustw10',...
            'beta50','r50','J50','Sigma50','mse50','errorparam50','robustw50',...
            'beta100','r100','J100','Sigma100','mse100','errorparam100','robustw100',...
            'beta1k','r1k','J1k','Sigma1k','mse1k','errorparam1k','robustw1k',...
            'beta2k','r2k','J2k','Sigma2k','mse2k','errorparam2k','robustw2k',...
            'beta6k','r6k','J6k','Sigma6k','mse6k','errorparam6k','robustw6k',...
            'beta12k','r12k','J12k','Sigma12k','mse12k','errorparam12k','robustw12k'...
);
