function [] = runang(t,r,m)

M = MC2DLJoutput(625,t,r,1,'auto',10,(m/12)^(1/(m-12))/2,...
            'pressure',false,'m',m,'ufunc',@(r) 0.75*r.^-m,...
            'angleDependent',true,...
            'angleDependence',@(a,t) 3*(cos(t).^2+cos(t-a).^2-5*cos(t).^2.*cos(t-a).^2-1/3) - (1-1)*cos(a).^2-3*(1-3)*cos(a).*cos(t).*cos(a-t),...
            'maxdAng',pi/4,'hcr',true,...
            'fileNameInit','angdep/','dontSaveDists',true);
        
% equilibration
tic;
M = M.MonteCarlo(1,0);
toc
disp('1');
M = M.addStep2data(M.currentStep,...
                        M.currentCoords,...
                        M.currentDists,M.currentU,...
                        M.currentVir,M.currentPressure,...
                        M.moveCount,M.currentmaxdr,M.Ulrc,...
                        M.Plrc,...
                        M.simulationParam.angleDependent,...
                        M.currentAngs,...
                        M.currentAlphas,M.currentThetas,...
                        M.simulationParam.dontSaveDists);
      
% run
disp('1');
M = M.MonteCarlo(1,10);
disp('1');
                    
end